<project name="KBase Authentication Service MKII" default="test" basedir=".">

  <description>
      Build file for the second KBase Authentication Service 
  </description>

  <!-- TODO ZLATER BUILD switch to gradle or at least ivy -->

  <!-- set global properties for this build -->
  <property name="package" value="KBase authentication service"/>
  <property name="src.dir" location="src"/>
  <property name="src.tests.dir" location="src"/>
  <property name="dist.dir" location="dist"/>
  <property name="jar.dir" location="../jars/lib/jars/"/>
  <property name="classes.dir" location="classes"/>
  <property name="doc.dir" location="docs/javadoc"/>
  <property name="testjar.file" value="KBaseAuth2Test.jar"/>
  <property name="jar.file" value="KBaseAuth2.jar"/>
  <property name="war.file" value="KBaseAuth2.war"/>
  <property name="war.dir" value="war"/>
  <property name="script.file" value="./manage_auth"/>
  <property name="deploy.dir" value="./jettybase"/>

  <target name="help">
    <echo message="build    - Generates a new files as specified by 'compile', 'buildwar', 'script' and 'javadoc'."/>
    <echo message="buildwar - Generates a new war file ${war.dir}/${war.file} and deploys it to ${deploy.dir}."/>
    <echo message="clean    - Removes all generated files and directories."/>
    <echo message="compile  - Generates a new set of classes in ${classes.dir}, ${line.separator}
         and a new set of jar files in ${dist.dir}."/>
    <echo message="init     - Creates a new set of empty directories where generated files are to be written. ${line.separator}
         Deletes any existing directories before creating new ones."/>
    <echo message="javadoc  - Generates javadoc documentation at ${doc.dir}."/>
    <echo message="script   - Generates a new CLI script ${script.file}."/>
    <echo message="test     - Executes unit tests."/>
  </target>

  <fileset dir="${jar.dir}" id="lib">
    <include name="apache_commons/commons-codec-1.8.jar"/>
    <include name="apache_commons/commons-validator-1.5.1.jar"/>
    <include name="google/guava-18.0.jar"/>
    <include name="ini4j/ini4j-0.5.2.jar"/>
    <include name="jcommander/jcommander-1.48.jar"/>
    <include name="mongo/mongo-java-driver-3.3.0.jar"/>
    <include name="mustache/compiler-0.9.3.jar"/>
    <include name="nulab-inc/zxcvbn-1.2.2.jar"/>
  </fileset>

  <fileset dir="${jar.dir}" id="logging">
    <include name="kbase/common/kbase-common-0.0.22.jar"/>
    <include name="jna/jna-3.4.0.jar"/>
    <include name="logback/logback-core-1.1.2.jar"/>
    <include name="logback/logback-classic-1.1.2.jar"/>
    <include name="slf4j/slf4j-api-1.7.25.jar"/>
    <include name="syslog4j/syslog4j-0.9.46.jar"/>
  </fileset>
	
  <fileset dir="${jar.dir}" id="yauaa">
    <include name="yauaa/yauaa-1.3.jar"/>
    <include name="apache_commons/commons-lang3-3.5.jar"/>
    <include name="apache_commons/commons-collections4-4.1.jar"/>
    <include name="apache_commons/commons-logging-1.2.jar"/>
    <include name="kohsuke/args4j-2.33.jar"/>
    <include name="snakeyaml/snakeyaml-1.18.jar"/>
  </fileset>

  <fileset dir="${jar.dir}" id="jackson">
    <include name="jackson/jackson-annotations-2.5.4.jar"/>
    <include name="jackson/jackson-core-2.5.4.jar"/>
    <include name="jackson/jackson-databind-2.5.4.jar"/>
    <include name="jackson/jackson-jaxrs-base-2.5.4.jar"/>
    <include name="jackson/jackson-jaxrs-json-provider-2.5.4.jar"/>
    <include name="jackson/jackson-module-jaxb-annotations-2.5.4.jar"/>
  </fileset>
	
  <fileset dir="${jar.dir}" id="jersey">
    <include name="jersey/entity-filtering/jersey-entity-filtering-2.23.2.jar"/>
    <include name="jersey/entity-filtering/jersey-media-json-jackson-2.23.2.jar"/>
    <include name="jersey/mvc/jersey-mvc-2.23.2.jar"/>
    <include name="jersey/mvc/jersey-mvc-mustache-2.23.2.jar"/>
    <include name="jersey/jersey-client-2.23.2.jar"/>
    <include name="jersey/jersey-common-2.23.2.jar"/>
    <include name="jersey/jersey-container-servlet-2.23.2.jar"/>
    <include name="jersey/jersey-container-servlet-core-2.23.2.jar"/>
    <include name="jersey/jersey-guava-2.23.2.jar"/>
    <include name="jersey/jersey-media-jaxb-2.23.2.jar"/>
    <include name="jersey/jersey-server-2.23.2.jar"/>
  </fileset>

  <fileset dir="${jar.dir}" id="jerseydeps">
    <include name="annotation/javax.annotation-api-1.2.jar"/>
    <include name="asm/asm-debug-all-5.0.4.jar"/>
    <include name="inject/javax.inject-2.5.0-b05.jar"/>
    <include name="javassist/javassist-3.20.0-GA.jar"/>
    <include name="jaxb/jaxb-api-2.2.7.jar"/>
    <include name="jaxrs/javax.ws.rs-api-2.0.1.jar"/>
    <include name="osgi/org.osgi.core-4.2.0.jar"/>
    <include name="persistence/persistence-api-1.0.jar"/>
    <include name="servlet/javax.servlet-api-3.0.1.jar"/>
    <include name="validationapi/validation-api-1.1.0.Final.jar"/>
  </fileset>

  <fileset dir="${jar.dir}" id="jerseydep_hk2">
    <include name="hk2/aopalliance-repackaged-2.5.0-b05.jar"/>
    <include name="hk2/hk2-api-2.5.0-b05.jar"/>
    <include name="hk2/hk2-locator-2.5.0-b05.jar"/>
    <include name="hk2/hk2-utils-2.5.0-b05.jar"/>
    <include name="hk2/osgi-resource-locator-1.0.1.jar"/>
  </fileset>
	
  <fileset dir="${jar.dir}" id="testlibs">
    <include name="equalsverifier/equalsverifier-2.2.2.jar"/>
    <include name="jsemver/java-semver-0.9.0.jar"/>
    <include name="junit/junit-4.12.jar"/>
    <include name="mockserver/mockserver-netty-3.10.4-jar-with-dependencies.jar"/>
    <!-- mockito dependencies -->
    <include name="mockito/mockito-core-2.7.10.jar"/>
    <include name="bytebuddy/byte-buddy-1.6.8.jar"/>
    <include name="bytebuddy/byte-buddy-agent-1.6.8.jar"/>
    <include name="objenesis/objenesis-2.5.1.jar"/>
  </fileset>
	
  <union id="applicationjars">
    <fileset refid="jerseydeps"/>
    <fileset refid="jerseydep_hk2"/>
    <fileset refid="yauaa"/>
    <fileset refid="jackson"/>
    <fileset refid="jersey"/>
    <fileset refid="lib"/>
    <fileset refid="logging"/>
  </union>

  <path id="compile.classpath">
    <union refid="applicationjars"/>
    <fileset refid="testlibs"/>
  </path>

  <path id="test.classpath">
    <path refid="compile.classpath"/>
    <fileset file="${dist.dir}/${jar.file}"/>
    <fileset file="${dist.dir}/${testjar.file}"/>
  </path>
	
  <target name="build" depends="compile,buildwar,script,javadoc"
    description="build everything"/>

  <target name="init" depends="clean" description="make directories">
    <!-- Create the output directory structure-->
    <mkdir dir="${classes.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${doc.dir}"/>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <!-- Compile class files-->
    <javac srcdir="${src.dir}"
           destdir="${classes.dir}"
           excludes="**/StartAuthServer.java"
           includeantruntime="false"
           debug="true"
           classpathref="compile.classpath"
           target="1.8"
           source="1.8">
      <compilerarg line="-encoding utf-8"/>
    </javac>
    <!-- Make main jar file-->
    <jar destfile="${dist.dir}/${jar.file}"
         basedir="${classes.dir}"
         includes="us/kbase/auth2/**"
    />
    <!-- Make test jar file-->
    <jar destfile="${dist.dir}/${testjar.file}"
         basedir="${classes.dir}"
         includes="us/kbase/test/**"
    />
  </target>

  <target name="buildwar" depends="compile" description="build the WAR file">
    <!-- make the war file for the server-->
    <mkdir dir="${war.dir}/lib"/>
    <copy todir="${war.dir}/lib/" flatten="true">
      <union refid="applicationjars"/>
    </copy>
    <war destfile="${dist.dir}/${war.file}" webxml="${war.dir}/web.xml">
      <classes dir="${classes.dir}" includes="us/kbase/auth2/**"/>
      <lib dir="${war.dir}/lib/"/>
    </war>
    <!-- Remove uncompressed class files and libs-->
    <delete dir="${war.dir}/lib"/>
    <!-- copy war to jettybase -->
    <copy tofile="${deploy.dir}/webapps/ROOT.war" file="${dist.dir}/${war.file}" />
    <!-- probably a better way to do this -->
    <delete dir="${deploy.dir}/templates"/>
    <mkdir dir="${deploy.dir}/templates"/>
    <copy todir="${deploy.dir}/templates">
      <fileset dir="./templates" includes="**"/>  
    </copy>
  </target>

  <target name="javadoc" description="build javadocs">
    <javadoc access="protected"
             author="false"
             classpathref="compile.classpath"
             destdir="${doc.dir}"
             sourcepath="${src.dir}"
             excludepackagenames="us.kbase.test.*"
             nodeprecated="false"
             nodeprecatedlist="false"
             noindex="false"
             nonavbar="false"
             notree="false"
             source="1.8"
             splitindex="true"
             use="true"
             version="true">
      <link href="http://docs.oracle.com/javase/8/docs/api/"/>
      <link href="http://api.mongodb.com/java/3.3/"/>
      <link href="https://google.github.io/guava/releases/18.0/api/docs/"/>
    </javadoc>
  </target>
	
  <target name="test" depends="compile" description="run tests">
    <echo message="starting ${package} tests"/>
    <junit failureproperty="test.failed" fork="no" printsummary="on">
      <classpath refid="test.classpath"/>
      <formatter type="plain" usefile="false" />
      <sysproperty key="AUTH2_TEST_CONFIG" value="./test.cfg" />
      <batchtest>
        <fileset dir="${src.tests.dir}">
          <include name="**/*Test*.java"/>
        </fileset>
      </batchtest>
    </junit>
    <fail message="Test failure detected, check test results." if="test.failed" />
  </target>
	
  <target name="script" depends="compile" description="create cli script">
    <pathconvert targetos="unix" property="lib.classpath" refid="applicationjars"/>
    <echo file="${script.file}">#!/bin/sh
java -cp ${dist.dir}/${jar.file}:${lib.classpath} us.kbase.auth2.cli.AuthCLI $@
    </echo>
    <chmod file="${script.file}" perm="a+x"/>
  </target>
	
  <target name="clean" description="clean up" >
    <!-- Clean up internal temporary files and folders-->
    <delete dir="${classes.dir}"/>
    <delete dir="${dist.dir}"/>
    <delete file="${war.file}"/>
    <delete dir="${doc.dir}"/>
    <delete file="${script.file}"/>
  </target>
</project>

