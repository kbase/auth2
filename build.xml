<project name="KBase Authentication Service MKII" default="test" basedir="."
  xmlns:jacoco="antlib:org.jacoco.ant">

  <description>
      Build file for the second KBase Authentication Service 
  </description>
	
  <!-- TODO ZLATER BUILD switch to gradle or at least ivy -->

  <!-- set global properties for this build -->
  <property name="package" value="KBase authentication service"/>
  <property name="src" location="src"/>
  <property name="lib" location="lib"/>
  <property name="dist" location="dist"/>
  <property name="jardir" location="../jars/lib/jars/"/>
  <property name="classes" location="classes"/>
  <property name="doc" location="docs/javadoc"/>
  <property name="testcfg" location="./test.cfg"/>
  <property name="testjar.file" value="KBaseAuth2Test.jar"/>
  <property name="templates.file" value="KBaseAuth2Templates.zip"/>
  <property name="jar.file" value="KBaseAuth2.jar"/>
  <property name="war.file" value="KBaseAuth2.war"/>
  <property name="war.dir" value="war"/>
  <property name="test.dir" location="${src}/us/kbase/test"/>
  <property name="test.reports.dir" location="test-reports"/>

  <fileset dir="${jardir}" id="lib">
    <include name="apache_commons/commons-codec-1.8.jar"/>
    <include name="apache_commons/commons-validator-1.5.1.jar"/>
    <include name="google/guava-18.0.jar"/>
    <include name="ini4j/ini4j-0.5.2.jar"/>
    <include name="jcommander/jcommander-1.48.jar"/>
<!--    <include name="mongo/mongo-java-driver-3.8.2.jar"/>-->
    <include name="mongo/mongodb-driver-core-4.11.1.jar"/>
    <include name="mongo/mongodb-driver-sync-4.11.1.jar"/>
    <include name="bson/bson-record-codec-4.11.1.jar"/>
    <include name="bson/bson-4.11.1.jar"/>
    <include name="mustache/compiler-0.9.3.jar"/>
    <include name="nulab-inc/zxcvbn-1.2.2.jar"/>
    <include name="jsemver/java-semver-0.9.0.jar"/>
  </fileset>

  <fileset dir="${jardir}" id="logging">
    <include name="kbase/common/kbase-common-0.0.22.jar"/>
    <include name="jna/jna-3.4.0.jar"/>
    <include name="logback/logback-core-1.1.2.jar"/>
    <include name="logback/logback-classic-1.1.2.jar"/>
    <include name="slf4j/slf4j-api-1.7.25.jar"/>
    <include name="syslog4j/syslog4j-0.9.46.jar"/>
  </fileset>
	
  <fileset dir="${jardir}" id="yauaa">
    <include name="yauaa/yauaa-1.3.jar"/>
    <include name="apache_commons/commons-lang3-3.5.jar"/>
    <include name="apache_commons/commons-collections4-4.1.jar"/>
    <include name="apache_commons/commons-logging-1.2.jar"/>
    <include name="kohsuke/args4j-2.33.jar"/>
    <include name="snakeyaml/snakeyaml-1.18.jar"/>
  </fileset>

  <fileset dir="${jardir}" id="jackson">
    <include name="jackson/jackson-annotations-2.5.4.jar"/>
    <include name="jackson/jackson-core-2.5.4.jar"/>
    <include name="jackson/jackson-databind-2.5.4.jar"/>
    <include name="jackson/jackson-jaxrs-base-2.5.4.jar"/>
    <include name="jackson/jackson-jaxrs-json-provider-2.5.4.jar"/>
    <include name="jackson/jackson-module-jaxb-annotations-2.5.4.jar"/>
  </fileset>
	
  <fileset dir="${jardir}" id="jersey">
    <include name="jersey/entity-filtering/jersey-entity-filtering-2.23.2.jar"/>
    <include name="jersey/entity-filtering/jersey-media-json-jackson-2.23.2.jar"/>
    <include name="jersey/mvc/jersey-mvc-2.23.2.jar"/>
    <include name="jersey/mvc/jersey-mvc-mustache-2.23.2.jar"/>
    <include name="jersey/jersey-client-2.23.2.jar"/>
    <include name="jersey/jersey-common-2.23.2.jar"/>
    <include name="jersey/jersey-container-servlet-2.23.2.jar"/>
    <include name="jersey/jersey-container-servlet-core-2.23.2.jar"/>
    <include name="jersey/jersey-guava-2.23.2.jar"/>
    <include name="jersey/jersey-media-jaxb-2.23.2.jar"/>
    <include name="jersey/jersey-server-2.23.2.jar"/>
  </fileset>

  <fileset dir="${jardir}" id="jerseydeps">
    <include name="annotation/javax.annotation-api-1.2.jar"/>
    <include name="asm/asm-debug-all-5.0.4.jar"/>
    <include name="inject/javax.inject-2.5.0-b05.jar"/>
    <include name="javassist/javassist-3.20.0-GA.jar"/>
    <include name="jaxb/jaxb-api-2.2.7.jar"/>
    <include name="jaxrs/javax.ws.rs-api-2.0.1.jar"/>
    <include name="osgi/org.osgi.core-4.2.0.jar"/>
    <include name="persistence/persistence-api-1.0.jar"/>
    <include name="servlet/javax.servlet-api-3.0.1.jar"/>
    <include name="validationapi/validation-api-1.1.0.Final.jar"/>
  </fileset>

  <fileset dir="${jardir}" id="jerseydep_hk2">
    <include name="hk2/aopalliance-repackaged-2.5.0-b05.jar"/>
    <include name="hk2/hk2-api-2.5.0-b05.jar"/>
    <include name="hk2/hk2-locator-2.5.0-b05.jar"/>
    <include name="hk2/hk2-utils-2.5.0-b05.jar"/>
    <include name="hk2/osgi-resource-locator-1.0.1.jar"/>
  </fileset>
	
  <fileset dir="${jardir}" id="testlibs">
    <include name="apache_commons/commons-io-2.4.jar"/>
    <include name="equalsverifier/equalsverifier-3.1.10.jar"/>
    <include name="junit/junit-4.12.jar"/>
    <include name="mockserver/mockserver-netty-3.10.4-jar-with-dependencies.jar"/>
    <include name="jetty/jetty-all-9.3.11.v20160721-uber.jar"/>
    <include name="diff/java-diff-utils-2.1.1.jar"/>
    <include name="diff/java-object-diff/java-object-diff-0.94.jar"/>
    <include name="jsoup/jsoup-1.10.2.jar"/>
    <!-- mockito and dependencies -->
    <include name="mockito/mockito-core-3.0.0.jar"/>
    <include name="bytebuddy/byte-buddy-1.9.10.jar"/>
    <include name="bytebuddy/byte-buddy-agent-1.9.10.jar"/>
    <include name="objenesis/objenesis-2.6.jar"/>
  </fileset>
	
  <union id="applicationjars">
    <fileset refid="jerseydeps"/>
    <fileset refid="jerseydep_hk2"/>
    <fileset refid="yauaa"/>
    <fileset refid="jackson"/>
    <fileset refid="jersey"/>
    <fileset refid="lib"/>
    <fileset refid="logging"/>
  </union>

  <path id="compile.classpath">
    <union refid="applicationjars"/>
    <fileset refid="testlibs"/>
  </path>

  <path id="test.classpath">
    <path refid="compile.classpath"/>
    <fileset file="${dist}/${jar.file}"/>
    <fileset file="${dist}/${testjar.file}"/>
  </path>
	
  <target name="print-classpath">
    <pathconvert property="classpathInName" refid="compile.classpath"/>
    <echo>Classpath is ${classpathInName}</echo>
  </target>

  <target name="print-test-classpath">
    <pathconvert property="classpathInName" refid="test.classpath"/>
    <echo>Classpath is ${classpathInName}</echo>
  </target>
	
  <target name="build" depends="compile,buildwar,script,javadoc"
    description="build everything"/>

  <target name="init" description="make directories">
    <!-- Create the output directory structure-->
    <mkdir dir="${classes}"/>
    <mkdir dir="${dist}"/>
    <mkdir dir="${test.reports.dir}"/>
    <mkdir dir="${test.reports.dir}/html"/>
  </target>

  <target name="compile" depends="init" description="compile the source">
    <!-- Compile class files-->
    <javac srcdir="${src}"
           destdir="${classes}"
           includeantruntime="false"
           debug="true"
           classpathref="compile.classpath"
           target="1.8"
           source="1.8">
      <compilerarg line="-encoding utf-8"/>
    </javac>
    <!-- Copy resource files-->
    <copy todir="${classes}">
      <fileset dir="${src}">
        <patternset>
          <include name="**/*.testdata"/>
          <include name="**/authjars"/>
        </patternset>
      </fileset>
    </copy>
    <!-- add git commit to file -->
    <exec executable="git" output="${classes}/us/kbase/auth2/gitcommit">
      <arg line="rev-parse HEAD"/>
    </exec>
    <!-- Make main jar file-->
    <jar destfile="${dist}/${jar.file}"
         basedir="${classes}"
         includes="us/kbase/auth2/**"
    />
    <!-- Make test jar file-->
    <jar destfile="${dist}/${testjar.file}"
         basedir="${classes}"
         includes="us/kbase/test/**"
    />
    <!-- make templates zip file -->
    <zip basedir="templates" destfile="${dist}/${templates.file}"/>
  </target>

  <target name="buildwar" depends="compile" description="build the WAR file">
    <!-- make the war file for the server-->
    <mkdir dir="${war.dir}/lib"/>
    <copy todir="${war.dir}/lib/" flatten="true">
      <union refid="applicationjars"/>
    </copy>
    <war destfile="${dist}/${war.file}" webxml="${war.dir}/web.xml">
      <classes dir="${classes}" includes="us/kbase/auth2/**"/>
      <lib dir="${war.dir}/lib/"/>
    </war>
    <!-- Remove uncompressed class files and libs-->
    <delete dir="${war.dir}/lib"/>
    <!-- copy war to jettybase -->
    <copy tofile="./jettybase/webapps/ROOT.war" file="${dist}/${war.file}" />
    <!-- probably a better way to do this -->
    <delete dir="./jettybase/templates"/>
    <mkdir dir="./jettybase/templates"/>
    <copy todir="./jettybase/templates">
      <fileset dir="./templates" includes="**"/>  
    </copy>
  </target>

  <target name="javadoc" description="build javadocs">
    <javadoc access="protected"
             author="false"
             classpathref="compile.classpath"
             destdir="${doc}"
             sourcepath="${src}"
             excludepackagenames="us.kbase.test.*"
             nodeprecated="false"
             nodeprecatedlist="false"
             noindex="false"
             nonavbar="false"
             notree="false"
             source="1.8"
             splitindex="true"
             use="true"
             version="true">
      <link href="https://docs.oracle.com/javase/8/docs/api/"/>
      <link href="http://api.mongodb.com/java/3.3/"/>
      <link href="https://google.github.io/guava/releases/18.0/api/docs/"/>
    </javadoc>
  </target>

  <path id="jacoco.classpath">
    <fileset dir="${jardir}">
      <include name="jacoco/org.jacoco.ant-0.8.4.jar"/>
      <include name="jacoco/org.jacoco.core-0.8.4.jar"/>
      <include name="jacoco/org.jacoco.report-0.8.4.jar"/>
      <include name="jacoco/org.jacoco.agent-0.8.4.jar"/>
      <include name="asm/asm-7.1.jar"/>
      <include name="asm/asm-commons-7.1.jar"/>
      <include name="asm/asm-analysis-7.1.jar"/>
      <include name="asm/asm-tree-7.1.jar"/>
    </fileset>
  </path>

  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml"
    classpathref="jacoco.classpath"/>
	
  <target name="test"
          depends="test_no_mongo_storage,test_mongo_storage"
          description="run all tests and generate test report">
    <delete file="${test.reports.dir}/merged_jacoco.exec"/>
    <jacoco:merge destfile="${test.reports.dir}/merged_jacoco.exec">
      <fileset dir="${test.reports.dir}" includes="*.exec"/>
    </jacoco:merge>
    <jacoco:report>
      <executiondata>
        <file file="${test.reports.dir}/merged_jacoco.exec"/>
      </executiondata>
      <structure name="Auth2 Unit Tests">
        <classfiles>
          <fileset dir="${classes}">
            <exclude name="**/test/**" />
          </fileset>
        </classfiles>
        <sourcefiles encoding="UTF-8">
          <fileset dir="${src}">
            <exclude name="**/test/**" />
          </fileset>
        </sourcefiles>
      </structure>
      <html destdir="${test.reports.dir}/html"/>
      <csv destfile="${test.reports.dir}/coverage-report.csv"/>
      <xml destfile="${test.reports.dir}/coverage-report.xml"/>
    </jacoco:report>
  </target>
	
  <target name="test_no_mongo_storage"
          depends="compile"
          description="run tests without the MongoStorage* tests">
    <echo message="starting ${package} tests"/>
    <delete file="${test.reports.dir}/no_mongo_storage_jacoco.exec"/>
    <jacoco:coverage destfile="${test.reports.dir}/no_mongo_storage_jacoco.exec"
        excludes="org/*:junit/*">
      <junit printsummary="yes" failureproperty="test.failed" fork="yes">
        <classpath refid="test.classpath"/>
        <formatter type="plain" usefile="false" />
        <sysproperty key="AUTH2_TEST_CONFIG" value="${testcfg}"/>
<!--        <test name="us.kbase.test.auth2.cli.AuthCLITest"/>-->
<!--        <test name="us.kbase.test.auth2.cryptutils.CryptUtilsTest"/>-->
<!--        <test name="us.kbase.test.auth2.cryptutils.SHA1RandomDataGeneratorTest"/>-->
<!--        <test name="us.kbase.test.auth2.kbase.KBaseAuthConfigTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationAnonymousIDsTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationConfigTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationConstructorTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationCreateLocalUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationCreateRootTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationCustomRoleTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationDisableUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationGetAvailableUserNameTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationGetUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationGetUserDisplayNamesTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationIdentityProviderTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationImportUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationLinkTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationLoginTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationPasswordLoginTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationPolicyIDTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationRoleTest"/>-->
<!--      	<test name="us.kbase.test.auth2.lib.AuthenticationTestModeGetUserDisplayNamesTest"/>-->
<!--      	<test name="us.kbase.test.auth2.lib.AuthenticationTestModeRoleTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationTestModeUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationTestModeTokenTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationTokenTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.AuthenticationUserUpdateTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.CustomRoleTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.DisplayNameTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.EmailAddressTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.LinkIdentitiesTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.LinkTokenTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.LocalLoginResultTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.LoginTokenTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.LoginStateTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.NameTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.OAuth2StartDataTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.PasswordHashAndSaltTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.PasswordTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.PolicyIDTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.RoleTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.TemporarySessionDataTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.TokenCreationContextTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.UserDisabledStateTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.UserNameTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.UserSearchSpecTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.UserUpdateTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.UtilsTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.ViewableUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.config.AuthConfigTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.config.CollectingExternalConfigTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.exceptions.ExceptionTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.identity.IdentityProviderConfigTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.identity.RemoteIdentityTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.token.TokenNameTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.token.TokenTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.user.AuthUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.user.LocalUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.user.NewUserTest"/>-->
<!--        <test name="us.kbase.test.auth2.providers.GlobusIdentityProviderTest"/>-->
<!--        <test name="us.kbase.test.auth2.providers.GoogleIdentityProviderTest"/>-->
<!--        <test name="us.kbase.test.auth2.providers.OrcIDIdentityProviderTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.AuthExternalConfigTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.LoggingFilterTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.api.AdminTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.api.AdminIntegrationTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.api.APITokenTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.api.TokenEndpointTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.api.TestModeTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.api.TestModeIntegrationTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.api.UserEndpointTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.common.ExternalTokenTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.common.IncomingJSONTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.common.ServiceCommonTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.AdminTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.AdminIntegrationTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.LinkTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.LoginTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.MeTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.SimpleEndpointsTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.TokensTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.UITokensTest"/>-->
<!--        <test name="us.kbase.test.auth2.service.ui.UIUtilsTest"/>-->
      </junit>
    </jacoco:coverage>
    <fail message="Test failure detected, check test results." if="test.failed" />
  </target>
	
  <target name="test_mongo_storage"
          depends="compile"
          description="run only the MongoStorage* tests">
    <echo message="starting ${package} tests"/>
    <delete file="${test.reports.dir}/mongo_storage_jacoco.exec"/>
    <jacoco:coverage destfile="${test.reports.dir}/mongo_storage_jacoco.exec"
        excludes="org/*:junit/*">
      <junit failureproperty="test.failed" fork="yes">
        <classpath refid="test.classpath"/>
        <formatter type="plain" usefile="false" />
        <sysproperty key="AUTH2_TEST_CONFIG" value="${testcfg}"/>
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageAnonymousIDTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageConfigTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageCustomRoleTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageTestRoleTest"/>-->
        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageDuplicateKeyCheckerTest"/>
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageDisableAccountTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageGetDisplayNamesTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageTestGetDisplayNamesTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageInvalidDBDataTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageLinkTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStoragePasswordTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageRecanonicalizationTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageRolesTest"/>-->
        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageStartUpTest"/>
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageTempSessionDataTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageTokensTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageTestTokensTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageUpdateUserFieldsTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageUserCreateGetTest"/>-->
<!--        <test name="us.kbase.test.auth2.lib.storage.mongo.MongoStorageTestUserCreateGetTest"/>-->
      </junit>
    </jacoco:coverage>
    <fail message="Test failure detected, check test results." if="test.failed" />
  </target>

  <target name="script" depends="compile" description="create cli script">
    <pathconvert targetos="unix" property="lib.classpath" refid="applicationjars"/>
    <echo file="./manage_auth">#!/bin/sh
java -cp ${dist}/${jar.file}:${lib.classpath} us.kbase.auth2.cli.AuthCLI $@
    </echo>
    <chmod file="./manage_auth" perm="a+x"/>
  </target>
	
  <target name="clean" description="clean up" >
    <!-- Clean up internal temporary files and folders-->
    <delete dir="${classes}"/>
    <delete dir="${test.reports.dir}"/>
    <delete dir="${dist}"/>
  </target>
</project>

